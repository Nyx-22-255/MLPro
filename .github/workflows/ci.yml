# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: python

on:
  workflow_run:
    workflows: ["Autodoc Gen", "Dependencies List Generation"]
    types:
      - completed

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']

    steps:
    - name: Checkout Codes
      uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install dill==0.3.6
        pip install numpy==1.23.5
        pip install matplotlib==3.6.3
        pip install transformations==2022.9.26
        pip install stable-baselines3==1.7.0
        pip install gym==0.21.0
        pip install scipy==1.8.1
        pip install pettingzoo==1.22.3
        pip install pygame==2.1.2
        pip install pymunk==6.4.0
        pip install multiprocess==0.70.14
        pip install river==0.14.0
        pip install scikit-learn==1.2.0
        pip install optuna==3.0.5
        pip install hyperopt==0.2.7
        pip install pyglet==1.5.27
        pip install sphinx
        pip install sphinx-rtd-theme
        pip install sphinx-copybutton
        pip install sphinx_multitoc_numbering
        pip install openml
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build the Documentation
      run: |
        make docu
    - name: Test with pytest
      run: |
        make pytest

